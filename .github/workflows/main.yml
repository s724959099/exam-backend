name: Publish Docker image and Deploy
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'get tag version'
        required: true
        default: '0.0.1'
jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    if: "!contains(github.ref, 'dev')"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          VERSION=${{ github.event.inputs.tag }}
          if [ -z "$VERSION" ]
          then
            echo "from push"
            VERSION=${GITHUB_REF#refs/*/}
          else
            echo "workflow_dispatch"
          fi

          echo ::set-output name=version::${VERSION}

      - name: Create env file
        run: |
          cat << EOF > .env.prod
          session_secret_key=${{ secrets.SESSION_SECRET_KEY }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_DATABASE_NAME=${{ secrets.DB_DATABASE_NAME }}
          FRONTEND_BASE_URL=${{ secrets.FRONTEND_BASE_URL }}
          BACKEND_BASE_URL=${{ secrets.BACKEND_BASE_URL }}
          SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
          SENDGRID_FROM_MAIL=${{ secrets.SENDGRID_FROM_MAIL }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          EOF
          mv .env.prod app/.env.prod

      - uses: whoan/docker-build-with-cache-action@v5
        name: Build & push Docker image
        with:
          image_name: s724959099/exam-backend/exam-backend
          image_tag: ${{ steps.prep.outputs.version }},latest
          registry: docker.pkg.github.com
          dockerfile: Dockerfile.prod
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          build_extra_args: --build-arg=TAG=${{ steps.prep.outputs.version }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          password: ${{ secrets.PASSWORD }}
          script: /root/backend_deploy.sh ${{ steps.prep.outputs.version }}

